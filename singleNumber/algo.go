package singlenumber

// 题目：找出数组中唯一一个出现一次的数字，其他数字都是出现三次
// 时间O(n)空间O(1)的解法：
// 数字的范围是整数，所以使用整数的位操作可以标记某一个数是否出现过
// 然后要对于出现三次的数将其位归零，需要使用两个整数变量，并结合位异或，位与，位或的操作
// v1用于存放某一位对应的数是否出现过，v2存放出现的
func singleNumber(n []int) int {
    v1 := 0
    v2 := 0
    for i := range n {
        v1, v2 = (v1^v2)|(v1^n[i]), v1&(v2^n[i])
    }
    return v2^v1    
}